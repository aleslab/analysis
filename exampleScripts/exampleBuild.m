
%This code was autogenerated on my laptop for loading a few files:
% %***BEGIN Code autogenerated by ptbCorgiDataBrowser() BEGIN***
% filesToLoad = { ...
% '/Volumes/Lee_MIDspeed/Experiment_4/Piloting/AL/zero/lateralLine_gap_AL_pilot_20170616_133731.mat';...
% '/Volumes/Lee_MIDspeed/Experiment_4/Piloting/AL/zero/lateralLine_gap_AL_pilot_20170616_135146.mat';...
% '/Volumes/Lee_MIDspeed/Experiment_4/Piloting/AL/zero/lateralLine_gap_AL_pilot_20170616_141617.mat';...
% };
% ptbCorgiData = overloadOpenPtbCorgiData( filesToLoad );
% %***END Code autogenerated by ptbCorgiDataBrowser() END***

%This code uses the data browser for selecting the data:
ptbCorgiData = uiGetPtbCorgiData();
linePos   = buildMatrixFromField('LinePos',ptbCorgiData);
flipTimes = buildMatrixFromField('flipTimes',ptbCorgiData);

%Bsxfun is an extremely useful matlab function, in r2016b and later it
%actually get's automatically called for basic arithmetic ops* / + -
%Subtract the first frame time so flip times represent trial time instead
%of global time
flipTimes = bsxfun(@minus,flipTimes,flipTimes(1,:,:,:));

figure(101);clf;
%Plot line positions for all trials for condition 4, participant 1
plot( flipTimes(:,:,4,1),linePos(:,:,4,1) );

%Note, the above only works because the trailing dimensions automatically
%get ignored if there size 1.  If not you need to use squeeze(), because
%plot() only works on up to 2d matrices
%plot( squeeze(flipTimes(:,1,:,1)),squeeze(linePos(:,1,:,1)) );
%
%To calculate the mean across trials: 
%plot(squeeze(nanmean(flipTimes,2)),squeeze(nanmean(linePos,2)))
%
figure(102);clf;
%Plot line positions for all participants, all conditions and all trials

%Here's a matlab trick.  Using (:,:) automatically reshapes the 4d matrix
%into a 2d matrix
plot(flipTimes(:,:),linePos(:,:));

